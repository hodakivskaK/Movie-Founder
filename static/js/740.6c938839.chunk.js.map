{"version":3,"file":"static/js/740.6c938839.chunk.js","mappings":"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","sources":["FetchAPI.jsx","components/SearchForm.jsx","webpack://react-homework-template/./src/components/MovieSearchList.module.css?8ee3","components/MovieSearchList.jsx","components/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'c93a6a4d3a553d1e7ad5324e4c95943f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCast: '/credits',\n  movieReviews: '/reviews',\n};\n\n\n// Home trending \nexport const getFetchTrending = async (page = 1) => {\n     const url = await axios.get(\n    `${POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  return url.data.results;\n};\n\n// Search Movie\nexport const getFetchByQuery = async (query, page = 1) => {\n  const url = await axios.get(\n    `${POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return url.data.results;\n};\n\n// 1 movie\nexport const fetchMoviesDetails = async id => {\n     const url = await axios.get(\n    `${POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return url.data;\n};\n\n// Cast \nexport const fetchMoviesCast = async id => {\n  const url = await axios.get(\n    `/movie/${id}${POINTS.movieCast}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return url.data.cast;\n};\n\n// Review\n\nexport const fetchMoviesReview = async id => {\n  const url = await axios.get(\n    `/movie/${id}${POINTS.movieReviews}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return url.data.results;\n};","import PropTypes from 'prop-types';\nimport { useState } from 'react'\nimport c from './SearchForm.module'\n\nexport const SearchForm = ({onSubmit}) => {\n    const [movieSearch, setMovieSearch] = useState(\"\");\n    \n    const handleSubmit = (e) => {\n          e.preventDefault();\n\n        if (movieSearch.trim() === '') {\n            return console.log(\"Field is empty\")\n        }\n        \n        onSubmit(movieSearch);\n        setMovieSearch(\"\");\n        e.currentTarget.reset();\n    }\n\n    const handleInput = (e) => {\n          setMovieSearch(e.currentTarget.value.toLowerCase())\n    }\n\n    return (\n        <form className={c.SearchForm} onSubmit={handleSubmit}>\n    <input\n      className={c.SearchFormInput}\n      type=\"text\"\n      autoComplete=\"off\"\n      autoFocus\n    placeholder=\"Search movies\"\n    onChange={handleInput}\n            />\n            \n            <button type=\"submit\" className={c.SearchFormButton}>\n                <span className=\"button-label\">\n                \n        Search\n                </span> \n    </button>\n        </form>\n    )\n}\n\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func\n};","// extracted by mini-css-extract-plugin\nexport default {\"moviesSearchList\":\"MovieSearchList_moviesSearchList__rZ0ce\",\"moviesSearchItem\":\"MovieSearchList_moviesSearchItem__sqJWz\",\"moviesSearchLink\":\"MovieSearchList_moviesSearchLink__ZMLuC\"};","\nimport s from './MovieSearchList.module.css'\nimport { Link } from 'react-router-dom';\n\nexport const MovieList = ({ movies, prevLocation }) => {\n    \n\n    return <ul className={s.moviesSearchList }>\n        {movies.map(movie => \n        <li key={movie.id} className={s.moviesSearchItem}>\n <Link to={`/movies/${movie.id}`} className={s.moviesSearchLink }>{movie.title}</Link>\n                \n        </li>)}\n        \n    </ul>\n}\n","import { useState, useEffect } from \"react\"\nimport { useSearchParams, useLocation  } from 'react-router-dom';\nimport { SearchForm } from \"./SearchForm\"\nimport {getFetchByQuery} from \"FetchAPI\";\nimport { MovieList } from \"./MovieSearchList\";\n\nexport default function Movies () {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movieSearch, setMovieSearch] = useState([]);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const location = useLocation();\n    const searchRequest = searchParams.get('query');\n\n      useEffect(() => {\n    if (!searchRequest) {\n      return;\n          }\n          \n    const fetchMovie = () => {\n      setLoading(true);\n      getFetchByQuery(searchRequest)\n        .then(results => {\n          if (!results.length) {\n            alert('No movies found!');\n          }\n\n          setMovieSearch(results);\n        })\n        .catch(error => {\n          setError('Sorry, nothing');\n          console.log(error);\n        })\n        .finally(setLoading(false));\n          };\n          \n    fetchMovie();\n      }, [searchRequest]);\n    \n    const handleSubmit = (name) => {\n        setSearchParams({ query: `${name}` });\n        console.log(name)\n    }\n\n\n\n    return <div>\n        {loading && <h1>Loading</h1> }\n        {error && <div>{error}</div>}\n        <SearchForm onSubmit={handleSubmit } />\n        {movieSearch && <MovieList movies={movieSearch} prevLocation={location} />}\n        \n    </div>\n\n}\n\n"],"names":["API_KEY","axios","POINTS","getFetchTrending","page","url","data","results","getFetchByQuery","query","fetchMoviesDetails","id","fetchMoviesCast","cast","fetchMoviesReview","SearchForm","onSubmit","useState","movieSearch","setMovieSearch","className","c","e","preventDefault","trim","console","log","currentTarget","reset","type","autoComplete","autoFocus","placeholder","onChange","value","toLowerCase","MovieList","movies","prevLocation","s","map","movie","to","title","Movies","useSearchParams","searchParams","setSearchParams","error","setError","loading","setLoading","location","useLocation","searchRequest","get","useEffect","then","length","alert","catch","finally","name"],"sourceRoot":""}