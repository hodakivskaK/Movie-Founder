{"version":3,"file":"static/js/168.26395934.chunk.js","mappings":"+SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIO,WAJPA,EAKU,WAKHC,EAAgB,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACTH,EAAAA,EAAAA,IAAA,UAChBC,EADgB,oBACWF,EADX,iBAC2BI,EAD3B,wCADS,cACrBC,EADqB,yBAIvBA,EAAIC,KAAKC,SAJc,2CAAH,qDAQhBC,EAAe,mCAAG,WAAOC,GAAP,4FAAcL,EAAd,+BAAqB,EAArB,SACXH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACiBF,EADjB,iBACiCI,EADjC,kBAC+CK,EAD/C,wCADW,cACvBJ,EADuB,yBAKtBA,EAAIC,KAAKC,SALa,2CAAH,sDASfG,EAAkB,mCAAG,WAAMC,GAAN,uFACXV,EAAAA,EAAAA,IAAA,UAChBC,EADgB,YACOS,EADP,oBACqBX,EADrB,oBADW,cACvBK,EADuB,yBAKzBA,EAAIC,MALqB,2CAAH,sDASlBM,EAAe,mCAAG,WAAMD,GAAN,uFACXV,EAAAA,EAAAA,IAAA,iBACNU,GADM,OACDT,EADC,oBAC2BF,EAD3B,oBADW,cACvBK,EADuB,yBAKtBA,EAAIC,KAAKO,MALa,2CAAH,sDAUfC,EAAiB,mCAAG,WAAMH,GAAN,uFACbV,EAAAA,EAAAA,IAAA,iBACNU,GADM,OACDT,EADC,oBAC8BF,EAD9B,oBADa,cACzBK,EADyB,yBAKxBA,EAAIC,KAAKC,SALe,2CAAH,qD,sIClD9B,EAAkC,iCAAlC,EAAqF,iCAArF,EAAkJ,2CAAlJ,EAAuN,yCAAvN,EAAkR,iCAAlR,EAAuU,mCAAvU,EAA8X,mC,kBCK/W,SAASQ,IACpB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACF,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBN,OAdFE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAECV,EAAAA,EAAAA,IAAkBO,GAFnB,OAEXI,EAFW,OAGjBP,EAAWO,GAHM,gDAKjBL,EAAS,SALQ,yDAAH,qDAShBI,GAEH,GAAE,CAACH,KAGE,gCACIF,IAAS,yBAAMA,KACf,eAAIO,UAAWC,EAAf,SACCV,GAAWA,EAAQW,KAAI,SAAAC,GAIpB,OADhBC,QAAQC,IAAKF,EAAOG,eAAeC,cAEf,gBAAoBP,UAAWC,EAA/B,WAEJ,iBAAKD,UAAWC,EAAhB,UAC6C,OAAtCE,EAAOG,eAAeC,aAC/B,SAAC,MAAD,CAAUP,UAAWC,KACrB,gBACAO,IAAG,yCAAoCL,EAAOG,eAAeC,aAC3DE,IAAG,UAAKlB,EAAQmB,KAAb,aACHV,UAAWC,EACXU,MAAM,KACNC,OAAO,QAGT,cAAGZ,UAAWC,EAAd,SAA2CE,EAAOU,aAGxC,eAAGb,UAAWC,EAAd,sBAA0C,0BAAOE,EAAOG,eAAeQ,aACvE,eAAGd,UAAWC,EAAd,uBAA2C,0BAAOE,EAAOY,eAjBpDZ,EAAOlB,GAsB3B,QAKR,C","sources":["FetchAPI.jsx","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'c93a6a4d3a553d1e7ad5324e4c95943f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCast: '/credits',\n  movieReviews: '/reviews',\n};\n\n\n// Home trending \nexport const getFetchTrending = async (page = 1) => {\n     const url = await axios.get(\n    `${POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  return url.data.results;\n};\n\n// Search Movie\nexport const getFetchByQuery = async (query, page = 1) => {\n  const url = await axios.get(\n    `${POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return url.data.results;\n};\n\n// Movie Id\nexport const fetchMoviesDetails = async id => {\n     const url = await axios.get(\n    `${POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return url.data;\n};\n\n// Cast \nexport const fetchMoviesCast = async id => {\n  const url = await axios.get(\n    `/movie/${id}${POINTS.movieCast}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return url.data.cast;\n};\n\n// Review\n\nexport const fetchMoviesReview = async id => {\n  const url = await axios.get(\n    `/movie/${id}${POINTS.movieReviews}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return url.data.results;\n};","// extracted by mini-css-extract-plugin\nexport default {\"movieReviewList\":\"Reviews_movieReviewList__em+8D\",\"movieReviewItem\":\"Reviews_movieReviewItem__stVJ3\",\"review__authorInformation\":\"Reviews_review__authorInformation__VEQ+Q\",\"movieReviewText__author\":\"Reviews_movieReviewText__author__fWT5v\",\"movieReviewText\":\"Reviews_movieReviewText__W3B7x\",\"review__avatarImg\":\"Reviews_review__avatarImg__88jq2\",\"review__notAvatar\":\"Reviews_review__notAvatar__sxrEB\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReview } from 'FetchAPI';\nimport s from './Reviews.module.css'\nimport { RxAvatar } from 'react-icons/rx';\n\nexport default function Reviews () {\n    const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const res = await fetchMoviesReview(movieId);\n        setReviews(res);\n      } catch (error) {\n        setError('ERROR');\n      }\n      };\n\n      fetchReviews();\n    \n  }, [movieId]);\n\n    return (\n        < >\n           {error && <div>{error}</div>}\n            <ul className={s.movieReviewList }>\n            {reviews && reviews.map(review => {\n/*               review.author_details =  {name, username, avatar_path, rating};\n */\nconsole.log( review.author_details.avatar_path)\n                return (\n                    <li key={review.id} className={s.movieReviewItem }>\n\n                <div className={s.review__authorInformation}>   \n                      {review.author_details.avatar_path === null? \n              <RxAvatar className={s.review__notAvatar} />: \n              <img\n              src={`https://image.tmdb.org/t/p/w300${review.author_details.avatar_path}`}\n                alt={`${reviews.name} portrait`}\n                className={s.review__avatarImg}\n                width=\"60\"\n                height=\"60\"\n              /> \n              }\n              <p className={s.movieReviewText__author }>{review.author}</p>\n                </div>   \n\n                        <p className={s.movieReviewText }>Rating: <span>{review.author_details.rating}</span></p>\n                        <p className={s.movieReviewText }> Review: <span>{review.content}</span></p>\n                      </li>\n                )\n              \n      \n        })}\n            </ul>\n            \n        </>\n    )\n}"],"names":["API_KEY","axios","POINTS","getFetchTrending","page","url","data","results","getFetchByQuery","query","fetchMoviesDetails","id","fetchMoviesCast","cast","fetchMoviesReview","Reviews","useState","reviews","setReviews","error","setError","movieId","useParams","useEffect","fetchReviews","res","className","s","map","review","console","log","author_details","avatar_path","src","alt","name","width","height","author","rating","content"],"sourceRoot":""}