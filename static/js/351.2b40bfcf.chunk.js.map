{"version":3,"file":"static/js/351.2b40bfcf.chunk.js","mappings":"+SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIO,WAJPA,EAKU,WAKHC,EAAgB,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACTH,EAAAA,EAAAA,IAAA,UAChBC,EADgB,oBACWF,EADX,iBAC2BI,EAD3B,wCADS,cACrBC,EADqB,yBAIvBA,EAAIC,KAAKC,SAJc,2CAAH,qDAQhBC,EAAe,mCAAG,WAAOC,GAAP,4FAAcL,EAAd,+BAAqB,EAArB,SACXH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACiBF,EADjB,iBACiCI,EADjC,kBAC+CK,EAD/C,wCADW,cACvBJ,EADuB,yBAKtBA,EAAIC,KAAKC,SALa,2CAAH,sDASfG,EAAkB,mCAAG,WAAMC,GAAN,uFACXV,EAAAA,EAAAA,IAAA,UAChBC,EADgB,YACOS,EADP,oBACqBX,EADrB,oBADW,cACvBK,EADuB,yBAKzBA,EAAIC,MALqB,2CAAH,sDASlBM,EAAe,mCAAG,WAAMD,GAAN,uFACXV,EAAAA,EAAAA,IAAA,iBACNU,GADM,OACDT,EADC,oBAC2BF,EAD3B,oBADW,cACvBK,EADuB,yBAKtBA,EAAIC,KAAKO,MALa,2CAAH,sDAUfC,EAAiB,mCAAG,WAAMH,GAAN,uFACbV,EAAAA,EAAAA,IAAA,iBACNU,GADM,OACDT,EADC,oBAC8BF,EAD9B,oBADa,cACzBK,EADyB,yBAKxBA,EAAIC,KAAKC,SALe,2CAAH,qD,sIClD9B,EAAgC,4BAAhC,EAA4E,4BAA5E,EAA0H,8BAA1H,EAAuK,2BAAvK,EAAmN,6BAAnN,EAAgQ,4B,yECKjP,SAASQ,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBN,OAbFE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEIZ,EAAAA,EAAAA,IAAgBS,GAFpB,OAERI,EAFQ,OAGdP,EAASO,GAHK,gDAKdL,EAAS,SALK,yDAAH,qDAQfI,GAED,GAAE,CAACH,KAGE,gCACDF,IAAS,yBAAMA,KAChB,eAAIO,UAAWC,EAAf,SACGV,GAASA,EAAMW,KAAI,SAAAC,GAClB,OACE,gBAAsBH,UAAWC,EAAjC,WACE,gBAAKD,UAAWC,EAAhB,SAC0B,OAA1BE,EAASC,cACT,gBACEC,IAAKC,EACLC,IAAG,UAAKJ,EAASK,KAAd,KACHR,UAAWC,KAEb,gBACAI,IAAG,yCAAoCF,EAASC,cAC9CG,IAAG,UAAKJ,EAASK,KAAd,aACHR,UAAWC,OAKb,iBAAKD,UAAWC,EAAhB,WACE,eAAGD,UAAWC,EAAd,oBAAsC,0BAAOE,EAASK,WACtD,eAAGR,UAAWC,EAAd,yBAA2C,0BAAOE,EAASM,oBAlBtDN,EAASlB,GAsBrB,QAKR,C","sources":["FetchAPI.jsx","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'c93a6a4d3a553d1e7ad5324e4c95943f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCast: '/credits',\n  movieReviews: '/reviews',\n};\n\n\n// Home trending \nexport const getFetchTrending = async (page = 1) => {\n     const url = await axios.get(\n    `${POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  return url.data.results;\n};\n\n// Search Movie\nexport const getFetchByQuery = async (query, page = 1) => {\n  const url = await axios.get(\n    `${POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return url.data.results;\n};\n\n// Movie Id\nexport const fetchMoviesDetails = async id => {\n     const url = await axios.get(\n    `${POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return url.data;\n};\n\n// Cast \nexport const fetchMoviesCast = async id => {\n  const url = await axios.get(\n    `/movie/${id}${POINTS.movieCast}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return url.data.cast;\n};\n\n// Review\n\nexport const fetchMoviesReview = async id => {\n  const url = await axios.get(\n    `/movie/${id}${POINTS.movieReviews}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return url.data.results;\n};","// extracted by mini-css-extract-plugin\nexport default {\"movieCastList\":\"Cast_movieCastList__4KLZ8\",\"movieCastItem\":\"Cast_movieCastItem__8JisQ\",\"movieCastImgBox\":\"Cast_movieCastImgBox__bieXf\",\"movieCastImg\":\"Cast_movieCastImg__5Lcw9\",\"movieCastDescr\":\"Cast_movieCastDescr__7lh6z\",\"movieCastText\":\"Cast_movieCastText__8W45g\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesCast } from 'FetchAPI';\nimport s from \"./Cast.module.css\"\nimport actorImage from '../../Image/Cast/actor-svgrepo-com.png';\n\nexport default function Cast()  {\n  const [casts, setCasts] = useState([]);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const res = await fetchMoviesCast(movieId);\n        setCasts(res);\n      } catch (error) {\n        setError('ERROR');\n      }\n    };\n    fetchCast();\n    \n  }, [movieId]);\n\n    return (\n        <>\n      {error && <div>{error}</div>}\n      <ul className={s.movieCastList }>\n        {casts && casts.map(castItem => {\n          return (\n            <li key={castItem.id} className={s.movieCastItem }>\n              <div className={s.movieCastImgBox}>\n             {castItem.profile_path === null? \n              <img\n                src={actorImage}\n                alt={`${castItem.name} `}\n                className={s.movieCastImg}\n              /> : \n              <img\n              src={`https://image.tmdb.org/t/p/w300${castItem.profile_path}`}\n                alt={`${castItem.name} portrait`}\n                className={s.movieCastImg}\n              /> \n              }\n           </div>\n             \n              <div className={s.movieCastDescr }>\n                <p className={s.movieCastText }>Name: <span>{castItem.name}</span></p>\n                <p className={s.movieCastText }>Character: <span>{castItem.character}</span></p>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    \n    </>\n  );\n}"],"names":["API_KEY","axios","POINTS","getFetchTrending","page","url","data","results","getFetchByQuery","query","fetchMoviesDetails","id","fetchMoviesCast","cast","fetchMoviesReview","Cast","useState","casts","setCasts","error","setError","movieId","useParams","useEffect","fetchCast","res","className","s","map","castItem","profile_path","src","actorImage","alt","name","character"],"sourceRoot":""}